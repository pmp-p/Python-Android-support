#!/bin/sh

export PYOPTS="--without-gcc --without-pymalloc --without-pydebug\
 --disable-ipv6 --without-ensurepip --with-c-locale-coercion\
 --enable-shared --with-computed-gotos"


#for arm: ac_cv_mixed_endian_double=yes
# ac_cv_little_endian_double=yes



python_ac_cv_patch () {
    cat >$1 <<END
ac_cv_little_endian_double=yes
ac_cv_file__dev_ptmx=yes
ac_cv_file__dev_ptc=no


ac_cv_func_pwrite=no
ac_cv_func_pwritev=no
ac_cv_func_pwritev2=no


ac_cv_lib_util_forkpty=no

ac_cv_func_getspnam=no
ac_cv_func_getspent=no
ac_cv_func_getgrouplist=no

ac_cv_header_uuid_h=no
ac_cv_header_uuid_uuid_h=no

ac_cv_func_wcsftime=no
ac_cv_func_crypt_r=no
ac_cv_search_crypt_r=no
END

}



python_module_setup_local () {
    cat > $1 <<END
*static*

_struct _struct.c   # binary structure packing/unpacking
_queue _queuemodule.c
parser parsermodule.c

math mathmodule.c _math.c # -lm # math library functions, e.g. sin()
cmath cmathmodule.c  # -lm # complex math library functions

#_weakref _weakref.c
#_codecs _codecsmodule.c         # access to the builtin codecs and codec registry
#_weakref _weakref.c         # weak references
#_functools _functoolsmodule.c   # Tools for working with functions and callable objects
#_operator _operator.c   # operator.add() and similar goodies
#itertools itertoolsmodule.c    # Functions creating iterators for efficient looping
#time timemodule.c # -lm # time operations and variables
#_sre _sre.c             # Fredrik Lundh's new regular expressions
#_collections _collectionsmodule.c # Container types

_datetime _datetimemodule.c # datetime accelerator

array arraymodule.c # array objects
_contextvars _contextvarsmodule.c


_random _randommodule.c # Random number generator



_bisect _bisectmodule.c # Bisection algorithms
_json _json.c
binascii binascii.c
#asyncio req
select selectmodule.c
fcntl fcntlmodule.c
_sha1 sha1module.c
_sha256 sha256module.c
_sha512 sha512module.c
_md5 md5module.c
#
termios termios.c
_sha3 _sha3/sha3module.c
_blake2 _blake2/blake2module.c _blake2/blake2b_impl.c _blake2/blake2s_impl.c
#aiohttp
unicodedata unicodedata.c
zlib zlibmodule.c -DUSE_ZLIB_CRC32 -lz
#future_builtins future_builtins.c

_heapq _heapqmodule.c   # Heap queue algorithm
_pickle _pickle.c   # pickle accelerator
_posixsubprocess _posixsubprocess.c  # POSIX subprocess module helper

_socket socketmodule.c

_lzma _lzmamodule.c -I${APKUSR}/include -L${APKUSR}/lib ${APKUSR}/lib/liblzma.a

_bz2 _bz2module.c -I${APKUSR}/include -L${APKUSR}/lib  ${APKUSR}/lib/libbz2.a

_hashlib _hashopenssl.c -I${APKUSR}/include -L${APKUSR}/lib -lsslpython -lcryptopython
_ssl _ssl.c -DUSE_SSL -I${APKUSR}/include -L${APKUSR}/lib -lsslpython -lcryptopython #${APKUSR}/lib/libssl.a ${APKUSR}/lib/libcrypto.a

_elementtree -I${PYDROID}/Modules/expat -DHAVE_EXPAT_CONFIG_H -DUSE_PYEXPAT_CAPI _elementtree.c # elementtree accelerator

_ctypes _ctypes/_ctypes.c \
 _ctypes/callbacks.c \
 _ctypes/callproc.c \
 _ctypes/stgdict.c \
 _ctypes/cfield.c -I${PYDROID}/Modules/_ctypes -I${APKUSR}/include -L${APKUSR}/lib -lffi # ${APKUSR}/lib/libffi.a

_decimal _decimal/_decimal.c \
 _decimal/libmpdec/basearith.c \
 _decimal/libmpdec/constants.c \
 _decimal/libmpdec/context.c \
 _decimal/libmpdec/convolute.c \
 _decimal/libmpdec/crt.c \
 _decimal/libmpdec/difradix2.c \
 _decimal/libmpdec/fnt.c \
 _decimal/libmpdec/fourstep.c \
 _decimal/libmpdec/io.c \
 _decimal/libmpdec/memory.c \
 _decimal/libmpdec/mpdecimal.c \
 _decimal/libmpdec/numbertheory.c \
 _decimal/libmpdec/sixstep.c \
 _decimal/libmpdec/transpose.c \
 -DCONFIG_${BITS} -DANSI -I${PYDROID}/Modules/_decimal/libmpdec

END
}



python_configure () {

    cp $ROOT/${ANDROID_NDK_ABI_NAME}.sh $1
    cat >> $1 <<END

export _PYTHON_PROJECT_SRC=${PYDROID}
export _PYTHON_PROJECT_BASE=$(pwd)
export PYTHONDONTWRITEBYTECODE=1
export APKUSR=${APKUSR}


$CXX -shared -fPIC -Wl,-soname,libbrokenthings.so -o ${APKUSR}/lib/libbrokenthings.so ${ORIGIN}/patch/ndk_api19/brokenthings.cpp

#${APKUSR}/lib/libbz2.a ${APKUSR}/lib/liblzma.a
#-lbz2 -llzma

PKG_CONFIG_PATH=${APKUSR}/lib/pkgconfig \\
PLATFORM_TRIPLET=${PLATFORM_TRIPLET} \\
CONFIG_SITE=config.site \\
 CFLAGS="$CFLAGS" \\
 \${_PYTHON_PROJECT_SRC}/configure --with-libs='-L${APKUSR}/lib -lbrokenthings -lstdc++ -lz -lm' \\
 --with-openssl=${APKUSR} --host=${PLATFORM_TRIPLET} --build=${HOST_TRIPLET} --prefix=${APKUSR} \\
 $PYOPTS 2>&1 >> ${BUILD_SRC}/build.log

if [ -f Makefile ]
then
    cat >>pyconfig.h <<DEF
#ifndef HAVE_FORK
#define HAVE_FORK 1
#endif
DEF
    TERM=linux reset
    #make libpython3.so libinstall inclinstall
    make install

    mv -vf ${PYLIB}/_sysconfigdata__linux_${ARCH}-linux-${ABI}.py ${PYASSETS}/_sysconfigdata__android_${ARCH}-linux-${ABI}.py
else
    echo ================== ${BUILD_SRC}/build.log ===================
    tail -n 30 ${BUILD_SRC}/build.log
    echo "Configuration failed for $PLATFORM_TRIPLET"
    env
fi
END
}
